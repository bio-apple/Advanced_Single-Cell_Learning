name: Docker Build & Push (Split by Platform)

on:
  push:
    branches:
      - main

jobs:
  check-dockerfile:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Dockerfile changes
        id: check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'Docker/Dockerfile'; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Dockerfile changed."
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No change in Dockerfile."
          fi

  cleanup:
    needs: check-dockerfile
    if: needs.check-dockerfile.outputs.changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space
        run: |
          echo "Before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean
          docker system prune -af || true
          echo "After cleanup:"
          df -h

  build-amd64:
    needs: cleanup
    runs-on: ubuntu-latest
    if: needs.check-dockerfile.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build amd64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fanyucai1/scrna:amd64

  build-arm64:
    needs: cleanup
    runs-on: ubuntu-latest
    if: needs.check-dockerfile.outputs.changed == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build arm64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Docker/Dockerfile
          platforms: linux/arm64
          push: true
          tags: fanyucai1/scrna:arm64

  manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    if: needs.check-dockerfile.outputs.changed == 'true'
    steps:
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Create and push multi-platform manifest
        run: |
          docker manifest create fanyucai1/scrna:latest \
            fanyucai1/scrna:amd64 \
            fanyucai1/scrna:arm64
          docker manifest push fanyucai1/scrna:latest
